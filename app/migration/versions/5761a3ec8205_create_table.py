"""Create table

Revision ID: 5761a3ec8205
Revises:
Create Date: 2025-06-12 22:15:10.419444

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5761a3ec8205"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cabinets",
        sa.Column("number_cabinet", sa.Integer(), nullable=False),
        sa.Column("name", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "doctors",
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("middle_name", sa.String(), nullable=False),
        sa.Column("specialty", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "patients",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("middle_name", sa.String(), nullable=True),
        sa.Column("date_birthday", sa.Date(), nullable=False),
        sa.Column("passport", sa.String(), nullable=False),
        sa.Column(
            "gender",
            postgresql.ENUM("MAN", "WOMAN", name="correct_gender_enum"),
            nullable=False,
        ),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("med_card_id", sa.Uuid(), nullable=False),
        sa.Column("photo_url", sa.String(), nullable=True),
        sa.Column("qr_code_url", sa.String(), nullable=True),
        sa.Column("date_issue", sa.Date(), nullable=False),
        sa.Column("date_last_request", sa.DateTime(), nullable=False),
        sa.Column("date_next_visit", sa.DateTime(), nullable=False),
        sa.Column("number_insurance_policy", sa.String(), nullable=False),
        sa.Column("date_expiration", sa.Date(), nullable=False),
        sa.Column("diagnosis", sa.String(), nullable=False),
        sa.Column("insurance_company", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roomhospitals",
        sa.Column("count_all_bed", sa.Integer(), nullable=False),
        sa.Column("count_free_bed", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "hospitalizations",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.Column("doctor_id", sa.Integer(), nullable=False),
        sa.Column("room_id", sa.Integer(), nullable=False),
        sa.Column("department", sa.String(), nullable=False),
        sa.Column("purpose", sa.String(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("is_paid", sa.Boolean(), nullable=False),
        sa.Column("refusal_patient", sa.Boolean(), nullable=True),
        sa.Column("refusal_doctor", sa.Boolean(), nullable=True),
        sa.Column("cancel_reason", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["roomhospitals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "med_procedures",
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.Column("doctor_id", sa.Integer(), nullable=False),
        sa.Column("cabinet_id", sa.Integer(), nullable=False),
        sa.Column("datetime_measures", sa.DateTime(), nullable=False),
        sa.Column("type_procedure", sa.String(), nullable=False),
        sa.Column("name_measures", sa.String(), nullable=False),
        sa.Column("result", sa.String(), nullable=False),
        sa.Column("recommendations", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cabinet_id"],
            ["cabinets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roompatientss",
        sa.Column("room_hosp_id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room_hosp_id"],
            ["roomhospitals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("roompatientss")
    op.drop_table("med_procedures")
    op.drop_table("hospitalizations")
    op.drop_table("roomhospitals")
    op.drop_table("patients")
    op.drop_table("doctors")
    op.drop_table("cabinets")
    # ### end Alembic commands ###
